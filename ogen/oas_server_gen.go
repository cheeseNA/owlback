// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// DeleteTasksTaskId implements delete-tasks-taskId operation.
	//
	// Your DELETE endpoint.
	//
	// DELETE /tasks/{taskId}
	DeleteTasksTaskId(ctx context.Context, params DeleteTasksTaskIdParams) error
	// GetTasks implements get-tasks operation.
	//
	// Your GET endpoint.
	//
	// GET /tasks
	GetTasks(ctx context.Context) ([]Task, error)
	// GetTasksTaskId implements get-tasks-taskId operation.
	//
	// Your GET endpoint.
	//
	// GET /tasks/{taskId}
	GetTasksTaskId(ctx context.Context, params GetTasksTaskIdParams) (GetTasksTaskIdRes, error)
	// PostTasks implements post-tasks operation.
	//
	// Your POST endpoint.
	//
	// POST /tasks
	PostTasks(ctx context.Context, req OptTask) (*Task, error)
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h Handler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		baseServer: s,
	}, nil
}
